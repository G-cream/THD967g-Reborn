先从mpq读取（和写入）说起。市面上的软件大致有以下几种方法：

0.listfile式。0这个数字说明了它的原始。如果mpq没有用listfile明确叙述自己的文件组成，它就无法读取其中的文件。怎么说呢，这就好像只要犯人不招认，自己也认为犯人无罪的笨蛋侦探一样，严谨到无聊。典型例子不是别人，正是大名鼎鼎的WorldEditor地图编辑器。对付这种软件，删掉listfile就一切安好。

1.小白式。这种软件基本上用自制的dll（因为暴雪只提供了读mpq的storm.dll，没有写入），按照mpq文件格式非常循规蹈矩地一步步读出内容。问题在于mpq数据稍有不对就会导致崩溃。例如header中mpq文件大小这项数据，war3读地图的时候根本不管，所以怎么写都不影响地图工作，但这类工具却会照着此数据读图，然后掉进番茄海的无底深渊。
典型例子是winmpq和mpqmaster。

2.storm式。以火龙hke为代表。这类mpq软件用暴雪提供的storm.dll读取mpq，读取方式和暴雪一致。由于mpq文件被设计成“知道文件名（含路径）可以很容易读取，但扫描所有文件路径却几乎不可能”的格式，war3在读地图时只用在需要的时候读指定文件就ok，所以这类编辑器也模拟war3读地图的方式，逐渐推算出“需要的文件”从而读出地图中近乎全部文件，只要在物编中涉及到或jass中提及的路径，都会检测对应的文件并列在表中。这是一种近乎无敌的方法，不会报错（否则war3也玩不了这图），且war3map.j等固定文件必然被扫描出来（否则war3自己也找不到）。

然后是重点：
但这里有个致命问题——不管是火龙还是war3，不可能预知到游戏过程中全部的文件读取，更确切说，全部的字符串。如果字符串是明文写在脚本中，如“sound\\aaa.mp3”，那么火龙会认为这可能是个文件，然后顺藤摸瓜找到它。但如果写成“sound\\” + “aaa.mp” + I2S(3)等甚至加上存取哈希表动作，火龙或任何软件也无法完全预知。这种不可预测是理论级的，即“图灵机无法预测另一台图灵机的全部可能状态”，等价于著名的“停机问题”，而停机问题是“理论不可计算”的。所以在游戏中虽然能正常听到音乐（或看到特效等），但火龙却无法提前知道这个文件的存在。
样例的图中正是这样，隐藏了一个2m+的mp3文件，但火龙却只能读出一大打war3map.xxx。
然后这种方法也能隐藏其它文件，但无法隐藏在物编中使用到的文件（如被某单位使用的导入模型）、地图必备文件（如j）和覆盖原路径文件（如替换的载入图片）。

3.hash扫描式。但是还没完，还有一种方式，某些软件绕过mpq前面的哈希索引表，直接扫描后面的文件，这样虽然不能知道文件名，但能得到完整的文件列表（再怎么说文件也是封在mpq里的吧，把mpq整个扫一遍总能发现）。例子是新版mpqeditor，样例图和某人提供的火影图都能打开，能看到一堆没有文件名的文件，其中就有隐藏的mp3，改成mp3扩展名就能正常播放。这种方式应该没什么弊端（除了得不到正确文件名），如果和火龙结合，用上述方法隐藏的文件也能以“未知名文件”的形式显示出来，其他文件则完美显示。